[{"C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\reportWebVitals.js":"1","C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\App.js":"2","C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\components\\game_board.js":"3"},{"size":362,"mtime":1608546767361,"results":"4","hashOfConfig":"5"},{"size":2957,"mtime":1608668931946,"results":"6","hashOfConfig":"5"},{"size":2310,"mtime":1608668869576,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5rmopb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\reportWebVitals.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\App.js",[],"C:\\Users\\thoma\\Documents\\GitHub\\react-d3-cgof\\src\\components\\game_board.js",["15"],"import {useEffect, useRef} from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nconst GameBoard = (props) => {\r\n    const nCellsWidth = 50\r\n    const boardSVG = useRef(null)\r\n\r\n    useEffect( () => {\r\n        \r\n        if(boardSVG.current && props.data){\r\n            //console.log('board rendered!')\r\n            //console.log(props.data)\r\n\r\n            const svg = d3.select(boardSVG.current)\r\n            \r\n            svg\r\n                .selectAll('rect')\r\n                .data(props.data, d=>d)\r\n                .join(\r\n                    enter => enter.append('rect')\r\n                        .style('stroke', 'black')\r\n                        .style('fill', d => {\r\n                            if (d === 0){\r\n                                return 'white'\r\n                            } else {\r\n                                return 'black'\r\n                            }\r\n                        })\r\n                        .attr('width', props.size.width/nCellsWidth)\r\n                        .attr('height', props.size.width/nCellsWidth)\r\n                        .attr('x', (d,i) => (i % nCellsWidth) * props.size.width/nCellsWidth)\r\n                        .attr('y', (d,i) => Math.floor(i/nCellsWidth) * props.size.width/nCellsWidth),\r\n                    update => update\r\n                        .style('stroke', 'black')\r\n                        .style('fill', d => {\r\n                            if (d === 0){\r\n                                return 'white'\r\n                            } else {\r\n                                return 'black'\r\n                            }\r\n                        })\r\n                        .attr('width', props.size.width/nCellsWidth)\r\n                        .attr('height', props.size.width/nCellsWidth)\r\n                        .attr('x', (d,i) => (i % nCellsWidth) * props.size.width/nCellsWidth)\r\n                        .attr('y', (d,i) => Math.floor(i/nCellsWidth) * props.size.width/nCellsWidth),\r\n                    exit => exit.remove()\r\n                )\r\n\r\n        }\r\n    }, [props.data])\r\n\r\n    return(\r\n        <svg \r\n            ref={boardSVG}\r\n            width={props.size.width}\r\n            height={props.size.height}\r\n            style={{border: '1px solid black', marginLeft: '100px'}}\r\n        ></svg>\r\n    )\r\n}\r\n\r\nexport default GameBoard",{"ruleId":"16","severity":1,"message":"17","line":50,"column":8,"nodeType":"18","endLine":50,"endColumn":20,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.size.width'. Either include it or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [props.data, props.size.width]",{"range":"23","text":"24"},[2036,2048],"[props.data, props.size.width]"]